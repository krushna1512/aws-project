******************************AWS Project******************************
1. Security Groups LB
- HTTP - anywhere from 
- HTTPS

2. Security Group for Tomcat
- 8080 -> Security grp of LB
- 22

3. SG for backend
- 3306(MYSQL)->  tomcatsg
- 11211(Memcached)-> tomcatsg  
- 5672(RabbitMQ) - > tomcatsg
- all trafic -> own security grp
- allow port 22 

4. Login key pair

5. Create EC2 instance
- Create insatace for mysql (t2.micro)
  mysql -u root -p
- Create instance for memcached (t2.micro)
     sudo su
  1  nano memcached.sh
  2  chmod +x memcached.sh 
  3  ./memcached.sh

- Create instance for rabbitmq (t2.micro)(Red Hat)
  yum install nano -y   

6. Note down the private ips of the insatnces

7. Make entry in Route53
   mysql 172.31.14.216
   rb   172.31.10.231
   ms   172.31.4.184

8. Add record name in appication.property file   

9. Create tomcat instance(Ubuntu 22) -> tomcatsg

10. Download and Install JAVA and Maven in local system and set the path
 - open powershell and install chocolaty
    Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

  - push code in github
    choco install jdk8
    choco install maven
    mvn clean install
  - pull the code in Tomcat Server
  - stop tomcat service "service tomcat8 stop"
  - delete root directory from this path /opt/tomcat/webapps
  - Paste the artifact from /root/aws-project/target to "/opt/tomcat/webapps" this location
  - Start tomcat 'service tomcat8 start'

11. Create Load Balancer

  - create target group
  - add port 8080
  - Health check path /login
  - Advanced > Override port 8080
  - select tomcat server
  - create load balancer
  - select internet facing
  - select all Mapping zones
  - copy dns name with /aws-v2

12. Create auto scaling group

  - create image of tomcat server
  A. go to launch configuration
  - select ami
  - instance type
  - enable cloud watch
  - select tomcat security grp
  - select key
  B. Go to Autoscaling grp
  - enter the name and select launch congiguration
  - select vpc and all subnets
  - enable load balancing and select target grp 
  - check mark on health check on ELB
  - select capacity Desired -1 , Min 2, Max 2 
  - select tracking scaling policy
  - select average CPU utilization to 70%
  - finally we can add notification for Autoscaling operations




http://archive.apache.org/dist/tomcat/tomcat-8/v8.0.23/bin/apache-tomcat-8.0.23.tar.gz

